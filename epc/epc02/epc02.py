# -*- coding: utf-8 -*-
"""epc02

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Ml9oMnjnSexZFJCdjgtI9kEipvDKvWgU
"""

# Importando pandas 
import pandas as pd

# Importando dados de treinamento e dados de teste
dataset = pd.read_csv('https://raw.githubusercontent.com/Joacy/pgcc015-inteligencia-computacional/master/epc/epc02/dados.txt', sep=' ');
x_test = pd.read_csv('https://raw.githubusercontent.com/Joacy/pgcc015-inteligencia-computacional/master/epc/epc02/teste.txt', sep=' ');

# Separando entradas e saídas para o treinamento
x_train = dataset.iloc[:,0:5];

y_train = dataset.iloc[:,5:6];

# Função sinal

def sinal(u):
  return 1 if u >= 0 else -1

# Inicialização da taxa de aprendizado e da precisão
eta = 0.0025;
e = 1e-6;

import numpy as np

cols = x_train.columns.size;
rows = int(x_train.size / cols);

# Inicialização do vetor de pesos
weights = np.random.rand(cols);

# Teste
rows = int(x_test.size / cols);
x_test = np.array(x_test);
y_test = np.zeros(rows);

i = 0;
while i < rows:
  j = 0;
  while j < cols:
    y_test[i] += x_test[i][j] * weights[j];
    j = j + 1;
  if (sinal(y_test[i]) == 1):
    print('O sinal é para a válvula B');
  else:
    print('O sinal é para a válvula A');
  i = i + 1;